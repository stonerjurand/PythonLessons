# Задание-1: уравнение прямой вида y = kx + b задано в виде строки.
# Определить координату y точки с заданной координатой x.

equation = 'y = -12x + 11111140.2121'
x = 2.5
# вычислите и выведите y

equation = equation.split(' ')

k = float(equation[2][:-1])
b = float(equation[-1])

y = (k*x) + b

print(f'y = {y}')

# Задание-2: Дата задана в виде строки формата 'dd.mm.yyyy'.
# Проверить, корректно ли введена дата.
# Условия корректности:
# 1. День должен приводиться к целому числу в диапазоне от 1 до 30(31)
#  (в зависимости от месяца, февраль не учитываем)
# 2. Месяц должен приводиться к целому числу в диапазоне от 1 до 12
# 3. Год должен приводиться к целому положительному числу в диапазоне от 1 до 9999
# 4. Длина исходной строки для частей должна быть в соответствии с форматом 
#  (т.е. 2 символа для дня, 2 - для месяца, 4 - для года)

# Пример корректной даты
date = '01.11.1985'

# Примеры некорректных дат
date = '01.22.1001'
date = '1.12.1001'
date = '-2.10.3001'

inputDate = '01.11.1985'

errorCounter = 0

inputDate = inputDate.split('.')

correctNumbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']

monthMaxDays = {
    "01": 31, "02": 29, "03": 31, "04": 30,
    "05": 31, "06": 30, "07": 31, "08": 31,
    "09": 30, "10": 31, "11": 30, "12": 31,
}

zerocheck = []

for i in inputDate[::-1]:
    for j in list(i):
        if j in correctNumbers:  # проверка на корректность введенных символов
            zerocheck.append(int(j))
        else:
            errorCounter += 1
    if sum(zerocheck) != 0:  # проверка на нулевые значения дат
        zerocheck = []
    else:
        errorCounter += 1
    if inputDate.index(i) < 2 and len(i) != 2:  # проверка на длину строки в значении dd/mm
        errorCounter += 1
    elif inputDate.index(i) == 2 and len(i) != 4:  # проверка на длину строки в значении yyyy
        errorCounter += 1
    if inputDate.index(i) == 1 and i[0] != '0':  # проверка на превышение допустимой нумерации mm
        if int(i) > 12:
            errorCounter += 1
    if inputDate.index(i) == 0 and i[0] != '0':  # проверка на превышение допустимой нумерации dd в зависимости от mm
        if int(i) > monthMaxDays[inputDate[1]]:
            errorCounter += 1

if errorCounter != 0:
    print("Дата введена некорректно")

# Задание-3: "Перевёрнутая башня" (Задача олимпиадного уровня)
#
# Вавилонцы решили построить удивительную башню —
# расширяющуюся к верху и содержащую бесконечное число этажей и комнат.
# Она устроена следующим образом — на первом этаже одна комната,
# затем идет два этажа, на каждом из которых по две комнаты, 
# затем идёт три этажа, на каждом из которых по три комнаты и так далее:
#         ...
#     12  13  14
#     9   10  11
#     6   7   8
#       4   5
#       2   3
#         1
#
# Эту башню решили оборудовать лифтом --- и вот задача:
# нужно научиться по номеру комнаты определять,
# на каком этаже она находится и какая она по счету слева на этом этаже.
#
# Входные данные: В первой строчке задан номер комнаты N, 1 ≤ N ≤ 2 000 000 000.
#
# Выходные данные:  Два целых числа — номер этажа и порядковый номер слева на этаже.
#
# Пример:
# Вход: 13
# Выход: 6 2
#
# Вход: 11
# Выход: 5 3